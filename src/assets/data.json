{
  "data": [
    {
      "name": "ChordSystem",
      "details": [
        {
          "type": "scenario",
          "content": "Imagine Chord as a super-efficient library catalog system for a massive library. Each book is assigned a unique number (hash), and the catalog tells you exactly which shelf holds the book you're looking for. It's great for quickly finding books in a huge library."
        },
        {
          "type": "example",
          "selectedNodes": [
            1,
            4,
            9,
            11,
            14,
            18,
            20,
            21,
            28
          ],
          "key": 12,
          "nodesAmount": 32,
          "bitIdentifier": 5,
          "startNode": 28
        }
      ]
    },
    {
      "name": "Berkeley",
      "details": [
        {
          "type": "scenario",
          "content": "Think of Berkeley as the place where a lot of really smart people came up with a set of rules and tools for building computer systems. Many modern computer operating systems, like MacOS, are like students who learned from Berkeley's 'textbook' on how to work well."
        },
        {
          "type": "example",
          "values": [
            "15:00",
            "14:50",
            "15:25"
          ],
          "exampleServerAmount": 3
        }
      ]
    },
    {
      "name": "CryptoSystem",
      "details": [
        {
          "type": "scenario",
          "content": "Crypto is like a magical language that only you and your friend can understand. You write messages in this language, and even if someone intercepts them, they can't read them without a special key. It's like sending secret messages."
        },
        {
          "type": "example",
          "values": {
            "public_key_a": 7,
            "private_key_a": 3,
            "modules_a": 33,
            "public_key_b": 3,
            "private_key_b": 11,
            "modules_b": 15,
            "message": 3,
            "hash_function": 5
          }
        }
      ]
    },
    {
      "name": "DiffieHellman",
      "details": [
        {
          "type": "scenario",
          "content": "Imagine you and your friend want to create a secret code, but you're worried about someone eavesdropping. Diffie-Hellman is like a mathematical magic trick that lets you both agree on a secret code without ever actually telling each other what it is, making it super secure."
        },
        {
          "type": "example",
          "values": {
            "modulo": 29,
            "base_value": 3,
            "person_a": 3,
            "person_b": 2
          }
        }
      ]
    },
    {
      "name": "Greedy",
      "details": [
        {
          "type": "scenario",
          "content": "Think of it like a delivery service trying to put its warehouses in the best locations to serve customers quickly. They use a strategy where they place warehouses in areas with the most orders so they can deliver packages faster to more people."
        },
        {
          "type": "example",
          "values": [
            [
              1,
              10,
              10
            ],
            [
              10,
              5,
              3
            ],
            [
              10,
              6,
              5
            ]
          ],
          "rows": 3,
          "columns": 3
        }
      ]
    },
    {
      "name": "PolymorphPolyring",
      "details": [
        {
          "type": "scenario",
          "content": "Think of a bustling city where people are constantly on the move, navigating through streets and alleys to reach their destinations. Polymorph Polyring is akin to a GPS system that guides individuals along the most efficient routes, considering the layout of the city and the locations of landmarks. As people move from one point to another, the GPS dynamically adjusts the directions, ensuring they reach their destinations with minimal detours and delays."
        },
        {
          "type": "example",
          "values": {}
        }
      ]
    },
    {
      "name": "LamportsLogicalClocks",
      "details": [
        {
          "type": "scenario",
          "content": "Think of it as a way to put timestamps on events, even if you have no synchronized clocks. It's like putting notes on events in a story so you can understand the order in which they happened."
        },
        {
          "type": "example",
          "values": [
            5,
            8,
            10
          ],
          "arrows": [
            [
              [
                "0+1",
                0,
                1
              ],
              [
                "1+2",
                1,
                2
              ]
            ],
            [
              [
                "1+3",
                1,
                3
              ],
              [
                "2+4",
                2,
                4
              ]
            ],
            [
              [
                "1+5",
                1,
                5
              ],
              [
                "0+6",
                0,
                6
              ]
            ],
            [
              [
                "2+6",
                2,
                6
              ],
              [
                "1+7",
                1,
                7
              ]
            ]
          ],
          "processors": 3,
          "rows": 9
        }
      ]
    },
    {
      "name": "VectorClock",
      "details": [
        {
          "type": "scenario",
          "content": "Imagine a complex dance performance with many dancers. Vector clocks are like little notebooks each dancer carries, and they jot down whenever they do a move. It helps everyone know who danced with whom and in what order, even if they didn't all start at the same time."
        },
        {
          "type": "example",
          "arrows": [
            [
              [
                "0-1-0",
                0,
                1
              ],
              [
                "2-1-2",
                2,
                1
              ]
            ],
            [
              [
                "2-2-2",
                2,
                2
              ],
              [
                "1-2-1",
                1,
                2
              ]
            ],
            [
              [
                "1-3-1",
                1,
                3
              ],
              [
                "0-3-0",
                0,
                3
              ]
            ],
            [
              [
                "2-4-2",
                2,
                4
              ],
              [
                "0-4-0",
                0,
                4
              ]
            ]
          ],
          "increments": {
            "1-1-1": [
              1,
              1
            ],
            "2-3-2": [
              2,
              3
            ]
          },
          "vectorsAmount": 3,
          "timeSteps": 5
        }
      ]
    }
  ]
}
